name: Test and Publish
on: push
jobs:
  test-client:
    name: Test Client
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: "14.16"
      - name: Client - Install
        run: npm ci
      - name: Client - audit
        run: npm run test:audit
      - name: Client - test format
        run: npm run test:format
      - name: Client - lint
        run: npm run test:lint
      - name: Client - test types
        run: npm run test:types
  # test-license:
  #   name: test license
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: test licenses
  #       run: make test-license
  # test-e2e:
  #   name: test e2e
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: build + run app in docker-compose
  #       run: docker-compose up -d
  #     - name: check services running
  #       run: docker ps
  #     - name: cypress - run tests
  #       run: make test-e2e-exec
  publish-check:
    name: Publish Check
    needs:
      - test-client
      # - test-license
      # - test-e2e
    runs-on: ubuntu-latest
    outputs:
      is_release: ${{ steps.is_release.outputs.is_release }}
    steps:
      - id: is_release
        run: |
          if [[ ${{ github.event.ref }} =~ ^refs/tags/[0-9]+\.[0-9]+\.[0-9]+(-[a-z0-9.]*)?$ ]]; then
              echo ::set-output name=is_release::true
          fi
  # build-and-publish:
  #   name: build + push docker image
  #   runs-on: ubuntu-latest
  #   needs:
  #     - publish-check
  #     - test-client
  #     - test-license
  #     - test-e2e
  #   if: needs.publish-check.outputs.is_release || github.ref == 'refs/heads/main'
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: docker tag
  #       id: tag
  #       run: |
  #         IMAGE_TAG=${GITHUB_SHA}
  #         echo ::set-output name=image_tag::${IMAGE_TAG}
  #     - name: docker login
  #       run: docker login -u ${{ secrets.DOCKER_LOGIN }} -p ${{ secrets.DOCKER_PASSWORD }}
  #     - name: Docker build
  #       run: export DOCKER_IMAGE=uscictdocker/mentor-client:${{ steps.tag.outputs.image_tag }} && make docker-build
  #     - name: docker tag release as version
  #       if: needs.publish-check.outputs.is_release == 'true'
  #       run: docker tag "uscictdocker/mentor-client:${{ steps.tag.outputs.image_tag }}" "uscictdocker/mentor-client:${GITHUB_REF#refs/tags/}"
  #     - name: docker tag main as latest
  #       if: github.ref == 'refs/heads/main'
  #       run: docker tag "uscictdocker/mentor-client:${{ steps.tag.outputs.image_tag }}" "uscictdocker/mentor-client:latest"
  #     - name: docker push
  #       run: docker push --all-tags uscictdocker/mentor-client
